// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modelo;

#nullable disable

namespace Modelo.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250722003928_SeguridadCompleto")]
    partial class SeguridadCompleto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.AuditoriaLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DireccionIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AuditoriasLogin");
                });

            modelBuilder.Entity("Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Mendoza",
                            Correo = "sofia.mendoza@example.com",
                            Dni = 38765432,
                            Nombre = "Sofia",
                            Telefono = 11223
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Ramirez",
                            Correo = "juan.ramirez@example.com",
                            Dni = 27654321,
                            Nombre = "Juan",
                            Telefono = 11667
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Flores",
                            Correo = "ana.flores@example.com",
                            Dni = 49876543,
                            Nombre = "Ana",
                            Telefono = 11990
                        });
                });

            modelBuilder.Entity("Entidades.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Grupos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Acceso total al sistema",
                            Nombre = "Administradores"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Acceso limitado para operaciones diarias",
                            Nombre = "Operadores"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Acceso para tecnicos del taller",
                            Nombre = "Tecnicos"
                        });
                });

            modelBuilder.Entity("Entidades.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Permisos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Ver clientes",
                            Modulo = "Clientes",
                            Nombre = "CLIENTES_VER"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Crear clientes",
                            Modulo = "Clientes",
                            Nombre = "CLIENTES_CREAR"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Editar clientes",
                            Modulo = "Clientes",
                            Nombre = "CLIENTES_EDITAR"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Eliminar clientes",
                            Modulo = "Clientes",
                            Nombre = "CLIENTES_ELIMINAR"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Ver tecnicos",
                            Modulo = "Tecnicos",
                            Nombre = "TECNICOS_VER"
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Crear tecnicos",
                            Modulo = "Tecnicos",
                            Nombre = "TECNICOS_CREAR"
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Editar tecnicos",
                            Modulo = "Tecnicos",
                            Nombre = "TECNICOS_EDITAR"
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Eliminar tecnicos",
                            Modulo = "Tecnicos",
                            Nombre = "TECNICOS_ELIMINAR"
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Ver vehiculos",
                            Modulo = "Vehiculos",
                            Nombre = "VEHICULOS_VER"
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Crear vehiculos",
                            Modulo = "Vehiculos",
                            Nombre = "VEHICULOS_CREAR"
                        },
                        new
                        {
                            Id = 11,
                            Descripcion = "Editar vehiculos",
                            Modulo = "Vehiculos",
                            Nombre = "VEHICULOS_EDITAR"
                        },
                        new
                        {
                            Id = 12,
                            Descripcion = "Eliminar vehiculos",
                            Modulo = "Vehiculos",
                            Nombre = "VEHICULOS_ELIMINAR"
                        },
                        new
                        {
                            Id = 13,
                            Descripcion = "Ver tickets",
                            Modulo = "Tickets",
                            Nombre = "TICKETS_VER"
                        },
                        new
                        {
                            Id = 14,
                            Descripcion = "Crear tickets",
                            Modulo = "Tickets",
                            Nombre = "TICKETS_CREAR"
                        },
                        new
                        {
                            Id = 15,
                            Descripcion = "Editar tickets",
                            Modulo = "Tickets",
                            Nombre = "TICKETS_EDITAR"
                        },
                        new
                        {
                            Id = 16,
                            Descripcion = "Eliminar tickets",
                            Modulo = "Tickets",
                            Nombre = "TICKETS_ELIMINAR"
                        },
                        new
                        {
                            Id = 17,
                            Descripcion = "Administrar usuarios",
                            Modulo = "Administracion",
                            Nombre = "ADMIN_USUARIOS"
                        },
                        new
                        {
                            Id = 18,
                            Descripcion = "Administrar grupos",
                            Modulo = "Administracion",
                            Nombre = "ADMIN_GRUPOS"
                        },
                        new
                        {
                            Id = 19,
                            Descripcion = "Administrar permisos",
                            Modulo = "Administracion",
                            Nombre = "ADMIN_PERMISOS"
                        });
                });

            modelBuilder.Entity("Entidades.Tecnico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<int>("Especialidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tecnicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Pérez",
                            Correo = "juan.perez@tecnico.com",
                            Dni = 12345678,
                            Especialidad = 1,
                            Nombre = "Juan"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Sánchez",
                            Correo = "maria.sanchez@tecnico.com",
                            Dni = 98765432,
                            Especialidad = 2,
                            Nombre = "María"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "López",
                            Correo = "carlos.lopez@tecnico.com",
                            Dni = 55555555,
                            Especialidad = 0,
                            Nombre = "Carlos"
                        });
                });

            modelBuilder.Entity("Entidades.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TecnicoId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TecnicoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            Descripcion = "Cambio de aceite y filtro",
                            Estado = 0,
                            FechaCreacion = new DateTime(2023, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TecnicoId = 1,
                            VehiculoId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            Descripcion = "Reparación de parabrisas",
                            Estado = 0,
                            FechaCreacion = new DateTime(2023, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TecnicoId = 3,
                            VehiculoId = 2
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 3,
                            Descripcion = "Falla en instrumental",
                            Estado = 0,
                            FechaCreacion = new DateTime(2023, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TecnicoId = 2,
                            VehiculoId = 3
                        });
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UltimoAcceso")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Email = "admin@carfix.com",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NombreUsuario = "admin",
                            PasswordHash = "7eGKCEt+3dTARc3W9axlX1JfVJgDMgZejXz+LJ3i5jA="
                        });
                });

            modelBuilder.Entity("Entidades.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Dominio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Vehiculos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Año = 2020,
                            ClienteId = 1,
                            Dominio = "ABC123D",
                            Marca = "Ford",
                            Modelo = "Fiesta"
                        },
                        new
                        {
                            Id = 2,
                            Año = 2018,
                            ClienteId = 2,
                            Dominio = "XYZ789W",
                            Marca = "Chevrolet",
                            Modelo = "Cruze"
                        },
                        new
                        {
                            Id = 3,
                            Año = 2022,
                            ClienteId = 3,
                            Dominio = "LMN456K",
                            Marca = "Toyota",
                            Modelo = "Corolla"
                        });
                });

            modelBuilder.Entity("GrupoPermisos", b =>
                {
                    b.Property<int>("GruposId")
                        .HasColumnType("int");

                    b.Property<int>("PermisosId")
                        .HasColumnType("int");

                    b.HasKey("GruposId", "PermisosId");

                    b.HasIndex("PermisosId");

                    b.ToTable("GrupoPermisos", (string)null);

                    b.HasData(
                        new
                        {
                            GruposId = 1,
                            PermisosId = 1
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 2
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 3
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 4
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 5
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 6
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 7
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 8
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 9
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 10
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 11
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 12
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 13
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 14
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 15
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 16
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 17
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 18
                        },
                        new
                        {
                            GruposId = 1,
                            PermisosId = 19
                        });
                });

            modelBuilder.Entity("UsuarioGrupos", b =>
                {
                    b.Property<int>("UsuariosId")
                        .HasColumnType("int");

                    b.Property<int>("GruposId")
                        .HasColumnType("int");

                    b.HasKey("UsuariosId", "GruposId");

                    b.HasIndex("GruposId");

                    b.ToTable("UsuarioGrupos", (string)null);

                    b.HasData(
                        new
                        {
                            UsuariosId = 1,
                            GruposId = 1
                        });
                });

            modelBuilder.Entity("Entidades.AuditoriaLogin", b =>
                {
                    b.HasOne("Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entidades.Ticket", b =>
                {
                    b.HasOne("Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Tecnico", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Tecnico");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Entidades.Vehiculo", b =>
                {
                    b.HasOne("Entidades.Cliente", "Dueño")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dueño");
                });

            modelBuilder.Entity("GrupoPermisos", b =>
                {
                    b.HasOne("Entidades.Grupo", null)
                        .WithMany()
                        .HasForeignKey("GruposId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Permiso", null)
                        .WithMany()
                        .HasForeignKey("PermisosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UsuarioGrupos", b =>
                {
                    b.HasOne("Entidades.Grupo", null)
                        .WithMany()
                        .HasForeignKey("GruposId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
