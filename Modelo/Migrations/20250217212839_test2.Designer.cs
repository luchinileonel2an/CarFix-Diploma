// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modelo;

#nullable disable

namespace Modelo.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250217212839_test2")]
    partial class test2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Mendoza",
                            Correo = "sofia.mendoza@example.com",
                            Dni = 38765432,
                            Nombre = "Sofia",
                            Telefono = 11223
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Ramirez",
                            Correo = "juan.ramirez@example.com",
                            Dni = 27654321,
                            Nombre = "Juan",
                            Telefono = 11667
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Flores",
                            Correo = "ana.flores@example.com",
                            Dni = 49876543,
                            Nombre = "Ana",
                            Telefono = 11990
                        });
                });

            modelBuilder.Entity("Entidades.Tecnico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<int>("Especialidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tecnicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Pérez",
                            Correo = "juan.perez@tecnico.com",
                            Dni = 12345678,
                            Especialidad = 1,
                            Nombre = "Juan"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Sánchez",
                            Correo = "maria.sanchez@tecnico.com",
                            Dni = 98765432,
                            Especialidad = 2,
                            Nombre = "María"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "López",
                            Correo = "carlos.lopez@tecnico.com",
                            Dni = 55555555,
                            Especialidad = 0,
                            Nombre = "Carlos"
                        });
                });

            modelBuilder.Entity("Entidades.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TecnicoId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TecnicoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            Descripcion = "Cambio de aceite y filtro",
                            Estado = 0,
                            FechaCreacion = new DateTime(2023, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TecnicoId = 1,
                            VehiculoId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            Descripcion = "Reparación de parabrisas",
                            Estado = 0,
                            FechaCreacion = new DateTime(2023, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TecnicoId = 3,
                            VehiculoId = 2
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 3,
                            Descripcion = "Falla en instrumental",
                            Estado = 0,
                            FechaCreacion = new DateTime(2023, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TecnicoId = 2,
                            VehiculoId = 3
                        });
                });

            modelBuilder.Entity("Entidades.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Dominio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Vehiculos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Año = 2020,
                            ClienteId = 1,
                            Dominio = "ABC123D",
                            Marca = "Ford",
                            Modelo = "Fiesta"
                        },
                        new
                        {
                            Id = 2,
                            Año = 2018,
                            ClienteId = 2,
                            Dominio = "XYZ789W",
                            Marca = "Chevrolet",
                            Modelo = "Cruze"
                        },
                        new
                        {
                            Id = 3,
                            Año = 2022,
                            ClienteId = 3,
                            Dominio = "LMN456K",
                            Marca = "Toyota",
                            Modelo = "Corolla"
                        });
                });

            modelBuilder.Entity("Entidades.Ticket", b =>
                {
                    b.HasOne("Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Tecnico", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Tecnico");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Entidades.Vehiculo", b =>
                {
                    b.HasOne("Entidades.Cliente", "Dueño")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dueño");
                });
#pragma warning restore 612, 618
        }
    }
}
